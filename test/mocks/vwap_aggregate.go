// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// VWAPAggregate is an autogenerated mock type for the VWAPAggregate type
type VWAPAggregate struct {
	mock.Mock
}

// Add provides a mock function with given fields: value
func (_m *VWAPAggregate) Add(value interface{}) {
	_m.Called(value)
}

// CheckWindowSize provides a mock function with given fields:
func (_m *VWAPAggregate) CheckWindowSize() {
	_m.Called()
}

// ID provides a mock function with given fields:
func (_m *VWAPAggregate) ID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// VWAP provides a mock function with given fields:
func (_m *VWAPAggregate) VWAP() float64 {
	ret := _m.Called()

	var r0 float64
	if rf, ok := ret.Get(0).(func() float64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

// NewVWAPAggregate creates a new instance of VWAPAggregate. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewVWAPAggregate(t testing.TB) *VWAPAggregate {
	mock := &VWAPAggregate{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
